@model IEnumerable<IKGAi.Models.Comment>

@{
    ViewData["Title"] = "Index";
    Layout = "_LayoutAdmin";
}

<h1>Index</h1>


<p>
    <button type="button" class="btn btn-success" data-bs-toggle="modal" data-bs-target="#commentModal"
            onclick="loadModalContent('@Url.Action("Create", "Comment")', 'Create New Comment')">
        Create New
    </button>

</p>
<table id="commentsTable" class="table table-dark table-hover table-striped">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Id)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.userId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.commentText)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.commentDate)
            </th>
            <th></th>
            <th></th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Id)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.userId)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.commentText)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.commentDate)
                </td>

                <td>
                    <button type="button" class="btn" data-bs-toggle="modal" data-bs-target="#commentModal"
                            onclick="loadModalContent('@Url.Action("Edit", "Comment", new { id = item.Id })', 'Edit Comment')">
                        Edit
                    </button>
                </td>

                <!-- Details Button -->
                <td>
                    <button type="button" class="btn" data-bs-toggle="modal" data-bs-target="#commentModal"
                            onclick="loadModalContent('@Url.Action("Details", "Comment", new { id = item.Id })', 'Comment Details')">
                        Details
                    </button>
                </td>

                <!-- Delete Button -->
                <td>
                    <button type="button" class="btn" data-bs-toggle="modal" data-bs-target="#commentModal"
                            onclick="loadModalContent('@Url.Action("Delete", "Comment", new { id = item.Id })', 'Delete Comment')">
                        Delete
                    </button>
                </td>
            </tr>
        }
    </tbody>
</table>

<!-- Common Modal -->
<div class="modal fade" id="commentModal" tabindex="-1" aria-labelledby="commentModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="commentModalLabel"></h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body"></div>
        </div>
    </div>
</div>

<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
@section Scripts {
    <script type="text/javascript">
        function loadModalContent(url, title) {
            $.get(url, function (data) {
                $('#commentModal .modal-body').html(data);
                $('#commentModalLabel').text(title);
            });
        }
        function submitCreateForm() {
            console.log("submitform");
            var form = $("#commentCreateForm");
            $.ajax({
                url: form.attr('action'),
                type: 'POST',
                data: form.serialize(),
                success: function (response) {
                    console.log(response);
                    if (response) {
                        $('#commentModal').modal('hide');
                        var newCommentRow = '<tr>' +
                            '<td>' + response.id + '</td>' +
                            '<td>' + response.userId + '</td>' +
                            '<td>' + response.commentText + '</td>' +
                            '<td>' + response.commentDate + '</td>' +
                            '<td><button type="button" class="btn" data-bs-toggle="modal" data-bs-target="#commentModal" ' +
                            'onclick="loadModalContent(\'/Comment/Edit/' + response.id + '\', \'Edit Comment\')">Edit</button></td>' +
                            '<td><button type="button" class="btn" data-bs-toggle="modal" data-bs-target="#commentModal" ' +
                            'onclick="loadModalContent(\'/Comment/Details/' + response.id + '\', \'Comment Details\')">Details</button></td>' +
                            '<td><button type="button" class="btn" data-bs-toggle="modal" data-bs-target="#commentModal" ' +
                            'onclick="loadModalContent(\'/Comment/Delete/' + response.id + '\', \'Delete Comment\')">Delete</button></td>' +
                            '</tr>';;
                        $('#commentsTable tbody').append(newCommentRow);
                    } else {
                        alert("Error: " + response.message);
                    }
                },
                error: function (xhr, status, error) {
                    alert("Something went wrong: " + error);
                }
            });
        }


           // Function to handle edit form submission
    function submitEditForm() {
        var form = $("#commentEditForm");
        $.ajax({
            url: form.attr('action'),
            type: 'POST',
            data: form.serialize(),
            success: function (response) {
                if (response) {
                    $('#commentModal').modal('hide');
                    // Update the row with the edited comment data
                    var row = $('#commentsTable tbody').find('tr').filter(function() {
                        return $(this).find('td:first').text() == response.id;
                    });
                    row.find('td:nth-child(2)').text(response.userId);
                    row.find('td:nth-child(3)').text(response.commentText);
                    row.find('td:nth-child(4)').text(response.commentDate);
                } else {
                    alert("Error: " + response.message);
                }
            },
            error: function (xhr, status, error) {
                alert("Something went wrong: " + error);
            }
        });
    }

                function submitDeleteForm() {
                var form = $("#commentDeleteForm");
                $.ajax({
                    url: form.attr('action'),
                    type: 'POST',
                    data: form.serialize(),
                    success: function (response) {
                        if (response.success) {
                            $('#commentModal').modal('hide');
                            // Remove the deleted comment row
                            $('#commentsTable tbody').find('tr').filter(function() {
                                return $(this).find('td:first').text() == response.id;
                            }).remove();
                        } else {
                            alert("Error: " + response.message);
                        }
                    },
                    error: function (xhr, status, error) {
                        alert("Something went wrong: " + error);
                    }
                });
            }
    </script>
}